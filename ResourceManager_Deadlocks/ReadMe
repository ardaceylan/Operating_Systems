In this project  a resource manager library, that  manages a set of resources for a multithreaded program (application) is developed. A program that is linked with the library can create multiple threads and each thread can request resources from the library are used.
When a program is started, with a function call to the library, the program is able to specify how many resource types and how many instances of each type are managed by the library. Then the library  does resource allocation and management for the threads that are created by the program and that are running concurrently. 
The resources that the library will manage are not real resources, they are simulated resources. A thread is blocked if the resources that it requests are not available or if it is not safe to allocate the requested resources. The library is able to detect deadlocks and avoid deadlocks, when desired.
